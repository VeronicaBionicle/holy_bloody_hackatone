#include "Arduino.h"
#include "TimerOne.h" //библиотека для работы с прерываниями по таймеру
#include "iarduino_RTC.h" //библиотека для работы с RTC модулем

// имена портов
// порты светофоров
#define GREENLIGHT 5
#define REDLIGHT 14
// порты фонарей 
#define L_1 3
#define L_2 4

//скорость изменения цвета  
#define FADESPEED 5     //чем выше число, тем медленнее будет переход

iarduino_RTC time(RTC_DS3231); //подключение RTC модуля     

char incomingByte;  //входящие с bluetooth-модуля данные 

int i;
//время вкл, выкл света
unsigned short int light_on_hour = 15;
unsigned short int light_off_hour = 17;
unsigned short int light_on_minute = 30;
unsigned short int light_off_minute = 10;

unsigned short int enabled_lamp[2] = {1,1};  //маска для выбранных вручную фонарей

volatile boolean traffic_state = false;
volatile int red_time = 5;
volatile int green_time = 10;
volatile int traffic_time = 0;

boolean light_state = false;

//функция для включения освещения
void Light_on(){
  if (light_state == false) {
  for (i=0; i<256; i++){
    analogWrite(L_1, i*enabled_lamp[0]);
    analogWrite(L_2, i*enabled_lamp[1]);
    delay(FADESPEED);
  };
  light_state = true;
  };
};

//функция для отключения освещения
void Light_off(){
  if (light_state == true) {
  for (i=255; i>=0; i--){
    analogWrite(L_1, i*enabled_lamp[0]);
    analogWrite(L_2, i*enabled_lamp[1]);
    delay(FADESPEED);
  };
  light_state = false;
  };
};

void Traffic_light(){
  if (!traffic_state){
    digitalWrite(REDLIGHT, !traffic_state);
    digitalWrite(GREENLIGHT, traffic_state);
    traffic_time++;
    if (traffic_time==red_time){
      traffic_state = !traffic_state;
      digitalWrite(REDLIGHT, !traffic_state);
      digitalWrite(GREENLIGHT, traffic_state);
      traffic_time = 0;
    };
  };

  if (traffic_state){
    digitalWrite(REDLIGHT, !traffic_state);
    digitalWrite(GREENLIGHT, traffic_state);
    traffic_time++;
    if (traffic_time==green_time){
      traffic_state = !traffic_state;
      digitalWrite(REDLIGHT, !traffic_state);
      digitalWrite(GREENLIGHT, traffic_state);
      traffic_time = 0;
    };
  };
};


void setup() {
//инициализация портов
  pinMode(GREENLIGHT, OUTPUT);
  pinMode(REDLIGHT, OUTPUT);
  pinMode(L_1, OUTPUT);
  pinMode(L_2, OUTPUT);

  Timer1.initialize();  //опрос датчика каждую секунду
 Serial.begin(9600);
  time.begin(); //запуск RTC модуля
              }
  
void loop() {
 //noInterrupts(); 
 //interrupts();

  Timer1.attachInterrupt(Traffic_light);
   Serial.println(time.gettime("d-m-Y, H:i:s, D"));
   
   if (time.Hours >= light_on_hour && time.Hours < light_off_hour) {
    if (time.minutes >= light_on_minute) Light_on(); else Light_off();}
    else {
    if (time.minutes >= light_off_minute) Light_off();
    else Light_on();
    };
      
            }
            
